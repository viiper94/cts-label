(()=>{"use strict";var t={303:(t,e,n)=>{n.d(e,{Z:()=>i});const i=class{constructor(){this.listeners={}}on(t,e){return this.listeners[t]||(this.listeners[t]=new Set),this.listeners[t].add(e),()=>this.un(t,e)}once(t,e){const n=this.on(t,e),i=this.on(t,(()=>{n(),i()}));return n}un(t,e){this.listeners[t]&&(e?this.listeners[t].delete(e):delete this.listeners[t])}unAll(){this.listeners={}}emit(t,...e){this.listeners[t]&&this.listeners[t].forEach((t=>t(...e)))}}}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var s=e[i]={exports:{}};return t[i](s,s.exports,n),s.exports}n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t=n(303);class e extends t.Z{constructor(t,e){let n;if(super(),this.timeouts=[],this.isScrolling=!1,this.audioData=null,this.resizeObserver=null,this.isDragging=!1,this.options=t,"string"==typeof t.container?n=document.querySelector(t.container):t.container instanceof HTMLElement&&(n=t.container),!n)throw new Error("Container not found");this.parent=n;const[i,r]=this.initHtml();n.appendChild(i),this.container=i,this.scrollContainer=r.querySelector(".scroll"),this.wrapper=r.querySelector(".wrapper"),this.canvasWrapper=r.querySelector(".canvases"),this.progressWrapper=r.querySelector(".progress"),this.cursor=r.querySelector(".cursor"),e&&r.appendChild(e),this.initEvents()}initEvents(){this.wrapper.addEventListener("click",(t=>{const e=this.wrapper.getBoundingClientRect(),n=(t.clientX-e.left)/e.width;this.emit("click",n)})),this.initDrag(),this.scrollContainer.addEventListener("scroll",(()=>{const{scrollLeft:t,scrollWidth:e,clientWidth:n}=this.scrollContainer,i=t/e,r=(t+n)/e;this.emit("scroll",i,r)}));const t=this.createDelay(100);this.resizeObserver=new ResizeObserver((()=>{t((()=>this.reRender()))})),this.resizeObserver.observe(this.scrollContainer)}initDrag(){!function(t,e,n,i,r=5){let s=()=>{};if(!t)return s;const o=o=>{if(2===o.button)return;o.preventDefault(),o.stopPropagation();let l=o.clientX,a=o.clientY,h=!1;const c=i=>{i.preventDefault(),i.stopPropagation();const s=i.clientX,o=i.clientY;if(h||Math.abs(s-l)>=r||Math.abs(o-a)>=r){const{left:i,top:r}=t.getBoundingClientRect();h||(h=!0,null==n||n(l-i,a-r)),e(s-l,o-a,s-i,o-r),l=s,a=o}},d=t=>{h&&(t.preventDefault(),t.stopPropagation())},p=()=>{h&&(null==i||i()),s()};document.addEventListener("pointermove",c),document.addEventListener("pointerup",p),document.addEventListener("pointerleave",p),document.addEventListener("click",d,!0),s=()=>{document.removeEventListener("pointermove",c),document.removeEventListener("pointerup",p),document.removeEventListener("pointerleave",p),setTimeout((()=>{document.removeEventListener("click",d,!0)}),10)}};t.addEventListener("pointerdown",o)}(this.wrapper,((t,e,n)=>{this.emit("drag",Math.max(0,Math.min(1,n/this.wrapper.clientWidth)))}),(()=>this.isDragging=!0),(()=>this.isDragging=!1))}getHeight(){return null==this.options.height?128:isNaN(Number(this.options.height))?"auto"===this.options.height&&this.parent.clientHeight||128:Number(this.options.height)}initHtml(){const t=document.createElement("div"),e=t.attachShadow({mode:"open"});return e.innerHTML=`\n      <style>\n        :host {\n          user-select: none;\n        }\n        :host audio {\n          display: block;\n          width: 100%;\n        }\n        :host .scroll {\n          overflow-x: auto;\n          overflow-y: hidden;\n          width: 100%;\n          position: relative;\n          touch-action: none;\n        }\n        :host .noScrollbar {\n          scrollbar-color: transparent;\n          scrollbar-width: none;\n        }\n        :host .noScrollbar::-webkit-scrollbar {\n          display: none;\n          -webkit-appearance: none;\n        }\n        :host .wrapper {\n          position: relative;\n          overflow: visible;\n          z-index: 2;\n        }\n        :host .canvases {\n          min-height: ${this.getHeight()}px;\n        }\n        :host .canvases > div {\n          position: relative;\n        }\n        :host canvas {\n          display: block;\n          position: absolute;\n          top: 0;\n          image-rendering: pixelated;\n        }\n        :host .progress {\n          pointer-events: none;\n          position: absolute;\n          z-index: 2;\n          top: 0;\n          left: 0;\n          width: 0;\n          height: 100%;\n          overflow: hidden;\n        }\n        :host .progress > div {\n          position: relative;\n        }\n        :host .cursor {\n          pointer-events: none;\n          position: absolute;\n          z-index: 5;\n          top: 0;\n          left: 0;\n          height: 100%;\n          border-radius: 2px;\n        }\n      </style>\n\n      <div class="scroll" part="scroll">\n        <div class="wrapper">\n          <div class="canvases"></div>\n          <div class="progress" part="progress"></div>\n          <div class="cursor" part="cursor"></div>\n        </div>\n      </div>\n    `,[t,e]}setOptions(t){this.options=t,this.reRender()}getWrapper(){return this.wrapper}getScroll(){return this.scrollContainer.scrollLeft}destroy(){var t;this.container.remove(),null===(t=this.resizeObserver)||void 0===t||t.disconnect()}createDelay(t=10){const e={};return this.timeouts.push(e),n=>{e.timeout&&clearTimeout(e.timeout),e.timeout=setTimeout(n,t)}}convertColorValues(t){if(!Array.isArray(t))return t||"";if(t.length<2)return t[0]||"";const e=document.createElement("canvas"),n=e.getContext("2d").createLinearGradient(0,0,0,e.height),i=1/(t.length-1);return t.forEach(((t,e)=>{const r=e*i;n.addColorStop(r,t)})),n}renderBarWaveform(t,e,n,i){const r=t[0],s=t[1]||t[0],o=r.length,{width:l,height:a}=n.canvas,h=a/2,c=window.devicePixelRatio||1,d=e.barWidth?e.barWidth*c:1,p=e.barGap?e.barGap*c:e.barWidth?d/2:0,u=e.barRadius||0,g=l/(d+p)/o,v=u&&"roundRect"in n?"roundRect":"rect";n.beginPath();let m=0,f=0,b=0;for(let t=0;t<=o;t++){const o=Math.round(t*g);if(o>m){const t=Math.round(f*h*i),r=t+Math.round(b*h*i)||1;let s=h-t;"top"===e.barAlign?s=0:"bottom"===e.barAlign&&(s=a-r),n[v](m*(d+p),s,d,r,u),m=o,f=0,b=0}const l=Math.abs(r[t]||0),c=Math.abs(s[t]||0);l>f&&(f=l),c>b&&(b=c)}n.fill(),n.closePath()}renderLineWaveform(t,e,n,i){const r=e=>{const r=t[e]||t[0],s=r.length,{height:o}=n.canvas,l=o/2,a=n.canvas.width/s;n.moveTo(0,l);let h=0,c=0;for(let t=0;t<=s;t++){const s=Math.round(t*a);if(s>h){const t=l+(Math.round(c*l*i)||1)*(0===e?-1:1);n.lineTo(h,t),h=s,c=0}const o=Math.abs(r[t]||0);o>c&&(c=o)}n.lineTo(h,l)};n.beginPath(),r(0),r(1),n.fill(),n.closePath()}renderWaveform(t,e,n){if(n.fillStyle=this.convertColorValues(e.waveColor),e.renderFunction)return void e.renderFunction(t,n);let i=e.barHeight||1;if(e.normalize){const e=Array.from(t[0]).reduce(((t,e)=>Math.max(t,Math.abs(e))),0);i=e?1/e:1}e.barWidth||e.barGap||e.barAlign?this.renderBarWaveform(t,e,n,i):this.renderLineWaveform(t,e,n,i)}renderSingleCanvas(t,e,n,i,r,s,o,l){const a=window.devicePixelRatio||1,h=document.createElement("canvas"),c=t[0].length;h.width=Math.round(n*(s-r)/c),h.height=i*a,h.style.width=`${Math.floor(h.width/a)}px`,h.style.height=`${i}px`,h.style.left=`${Math.floor(r*n/a/c)}px`,o.appendChild(h);const d=h.getContext("2d");this.renderWaveform(t.map((t=>t.slice(r,s))),e,d);const p=h.cloneNode();l.appendChild(p);const u=p.getContext("2d");h.width>0&&h.height>0&&u.drawImage(h,0,0),u.globalCompositeOperation="source-in",u.fillStyle=this.convertColorValues(e.progressColor),u.fillRect(0,0,h.width,h.height)}renderChannel(t,n,i){const r=document.createElement("div"),s=this.getHeight();r.style.height=`${s}px`,this.canvasWrapper.style.minHeight=`${s}px`,this.canvasWrapper.appendChild(r);const o=r.cloneNode();this.progressWrapper.appendChild(o);const{scrollLeft:l,scrollWidth:a,clientWidth:h}=this.scrollContainer,c=t[0].length,d=c/a;let p=Math.min(e.MAX_CANVAS_WIDTH,h);if(n.barWidth||n.barGap){const t=n.barWidth||.5,e=t+(n.barGap||t/2);p%e!=0&&(p=Math.floor(p/e)*e)}const u=Math.floor(Math.abs(l)*d),g=Math.floor(u+p*d),v=g-u,m=(e,l)=>{this.renderSingleCanvas(t,n,i,s,Math.max(0,e),Math.min(l,c),r,o)},f=this.createDelay(),b=this.createDelay(),C=(t,e)=>{m(t,e),t>0&&f((()=>{C(t-v,e-v)}))},w=(t,e)=>{m(t,e),e<c&&b((()=>{w(t+v,e+v)}))};C(u,g),g<c&&w(g,g+v)}render(t){this.timeouts.forEach((t=>t.timeout&&clearTimeout(t.timeout))),this.timeouts=[],this.canvasWrapper.innerHTML="",this.progressWrapper.innerHTML="",this.wrapper.style.width="";const e=window.devicePixelRatio||1,n=this.scrollContainer.clientWidth,i=Math.ceil(t.duration*(this.options.minPxPerSec||0));this.isScrolling=i>n;const r=this.options.fillParent&&!this.isScrolling,s=(r?n:i)*e;if(this.wrapper.style.width=r?"100%":`${i}px`,this.scrollContainer.style.overflowX=this.isScrolling?"auto":"hidden",this.scrollContainer.classList.toggle("noScrollbar",!!this.options.hideScrollbar),this.cursor.style.backgroundColor=`${this.options.cursorColor||this.options.progressColor}`,this.cursor.style.width=`${this.options.cursorWidth}px`,this.options.splitChannels)for(let e=0;e<t.numberOfChannels;e++){const n=Object.assign(Object.assign({},this.options),this.options.splitChannels[e]);this.renderChannel([t.getChannelData(e)],n,s)}else{const e=[t.getChannelData(0)];t.numberOfChannels>1&&e.push(t.getChannelData(1)),this.renderChannel(e,this.options,s)}this.audioData=t,this.emit("render")}reRender(){if(!this.audioData)return;const t=this.progressWrapper.clientWidth;this.render(this.audioData);const e=this.progressWrapper.clientWidth;this.scrollContainer.scrollLeft+=e-t}zoom(t){this.options.minPxPerSec=t,this.reRender()}scrollIntoView(t,e=!1){const{clientWidth:n,scrollLeft:i,scrollWidth:r}=this.scrollContainer,s=r*t,o=n/2;if(s>i+(e&&this.options.autoCenter&&!this.isDragging?o:n)||s<i)if(this.options.autoCenter&&!this.isDragging){const t=o/20;s-(i+o)>=t&&s<i+n?this.scrollContainer.scrollLeft+=t:this.scrollContainer.scrollLeft=s-o}else if(this.isDragging){const t=10;this.scrollContainer.scrollLeft=s<i?s-t:s-n+t}else this.scrollContainer.scrollLeft=s;{const{scrollLeft:t}=this.scrollContainer,e=t/r,i=(t+n)/r;this.emit("scroll",e,i)}}renderProgress(t,e){isNaN(t)||(this.progressWrapper.style.width=100*t+"%",this.cursor.style.left=100*t+"%",this.cursor.style.marginLeft=100===Math.round(100*t)?`-${this.options.cursorWidth}px`:"",this.isScrolling&&this.options.autoScroll&&this.scrollIntoView(t,e))}}e.MAX_CANVAS_WIDTH=4e3})()})();